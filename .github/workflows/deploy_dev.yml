name: Deploy to Oracle Cloud VM

on:
  push:
    branches:
      - develop
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - dev
          - prod
      image_tag:
        description: 'Custom image tag (defaults to commit SHA if not specified)'
        required: false
        type: string
        default: ''

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/sad-api:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/sad-api:${{ inputs.image_tag || github.sha }}

      - name: Deploy to Oracle Cloud VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ORACLE_VM_HOST }}
          username: ${{ secrets.ORACLE_VM_USERNAME }}
          key: ${{ secrets.ORACLE_VM_SSH_KEY }}
          script: |
            # Pull the latest image
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/sad-api:${{ inputs.image_tag || github.sha }}
            
            # Stop and remove existing container if it exists
            docker stop sad_container || true
            docker rm sad_container || true
            
            # Fetch secrets from Oracle Cloud Vault
            # Note: You'll need to install OCI CLI and configure it on the VM
            # The following commands assume OCI CLI is configured with proper permissions
            OPENAI_API_KEY=$(oci secrets secret-bundle get-secret-bundle-by-name \
              --vault-id ${{ secrets.ORACLE_VAULT_OCID }} \
              --secret-name OPENAI_API_KEY \
              --query "data.\"secret-bundle-content\".content" \
              --raw-output | base64 --decode)
            
            # Run the new container with secrets
            docker run -d \
              --name sad_container \
              -p 80:8080 \
              --restart unless-stopped \
              -e OPENAI_API_KEY="$OPENAI_API_KEY" \
              ${{ secrets.DOCKERHUB_USERNAME }}/sad-api:${{ inputs.image_tag || github.sha }} 